name: Build NodeMobile.framework

on:
  push:
    branches:
      - node-ios-*

env:
  SCCACHE_VERSION: 0.2.15

jobs:
  build:
    runs-on: macos-12
    strategy:
      fail-fast: true
      matrix:
        target:
        - arm64
        - x86_64
    env:
      HOST_ARCH: x86_64

    steps:
    - uses: actions/checkout@v2

    - uses: rui314/setup-mold@v1

    - name: build Node.js
      run: |
        source ./tools/ios_vars.sh

        export OPTIMIZATION_FLAGS="-fuse-ld=mold -miphoneos-version-min=14.0 -Ofast -g -isysroot ${SDKPATH}"
        # Need to define -arch by ourself when we're cross compiling
        # refer to xcode_emulation.py
        export CC="$(command -v cc) ${OPTIMIZATION_FLAGS} -arch ${TARGET_ARCH}"
        export CXX="$(command -v c++) ${OPTIMIZATION_FLAGS} -arch ${TARGET_ARCH}"
        export LINK="${CXX}"

        export CC_host="$(command -v cc) -fuse-ld=mold -arch ${HOST_ARCH}"
        export CXX_host="$(command -v c++) -fuse-ld=mold -arch ${HOST_ARCH}"
        export LINK_host="${CXX_host}"

        export GYP_DEFINES="host_arch=${{ env.HOST_ARCH }} host_os=mac target_arch=${{ matrix.target }} target_os=ios"
        export TARGET_LIBRARY_PATH="tools/ios-framework/bin/${{ matrix.target }}"

        ./configure \
          --dest-os=ios \
          --dest-cpu=${{ matrix.target }} \
          --with-intl=full-icu \
          --cross-compiling \
          --enable-static \
          --enable-lto \
          --v8-options=--jitless \
          --v8-disable-webassembly \
          --without-npm \
          --without-corepack

        make -j$(getconf _NPROCESSORS_ONLN)
        mkdir -p ${TARGET_LIBRARY_PATH}

        for LIB in "${LIBRARY_FILES[@]}"; do
          cp ${LIBRARY_PATH}/${LIB} ${TARGET_LIBRARY_PATH}
        done

    - name: build framework
      run: |
        export SDKTYPE="iphoneos"
        if [ "${{ matrix.target }}" = "x86_64" ]; then
          export SDKTYPE="iphonesimulator"
        fi

        rm -rf tools/ios-framework/bin/*.a
        cp tools/ios-framework/bin/${{ matrix.target }}/*.a tools/ios-framework/bin/
        xcodebuild build \
          -project tools/ios-framework/NodeMobile.xcodeproj \
          -target "NodeMobile" \
          -configuration Release \
          -arch ${{ matrix.target }} \
          -sdk ${SDKTYPE} \
          SYMROOT=$(pwd)

    - name: Upload framework
      uses: actions/upload-artifact@v3
      with:
        name: nodejs-mobile-${{ matrix.arch }}
        path: out_ios/Release-*

  xcframework:
    runs-on: macos-12
    needs: build
    steps:
      - uses: actions/download-artifact@v2

      - name: convert simulator framework to FAT framework
        run: |
          vtool -show-build nodejs-mobile-arm64/Release-iphoneos/NodeMobile.framework/NodeMobile > /tmp/buildVersion
          SDK_VERSION=$(grep sdk /tmp/buildVersion | awk '{print $2}')
          MINOS_VERSION=$(grep minos /tmp/buildVersion | awk '{print $2}')

          vtool \
            -set-build-version iossim ${MINOS_VERSION} ${SDK_VERSION} \
            -replace -output NodeMobile \
            nodejs-mobile-arm64/Release-iphoneos/NodeMobile.framework/NodeMobile

          lipo \
            -create \
              NodeMobile \
              nodejs-mobile-x86_64/Release-iphonesimulator/NodeMobile.framework/NodeMobile \
            -output NodeMobileSim

          rm -rf nodejs-mobile-x86_64/Release-iphonesimulator/NodeMobile.framework/NodeMobile
          mv NodeMobileSim nodejs-mobile-x86_64/Release-iphonesimulator/NodeMobile.framework/NodeMobile

      - name: build xcframework
        run: |
          xcodebuild -create-xcframework \
            -framework nodejs-mobile-arm64/Release-iphoneos/NodeMobile.framework \
            -debug-symbols nodejs-mobile-arm64/Release-iphoneos/NodeMobile.framework.dSYM \
            -framework nodejs-mobile-x86_64/Release-iphonesimulator/NodeMobile.framework \
            -debug-symbols nodejs-mobile-x86_64/Release-iphonesimulator/NodeMobile.framework.dSYM \
            -output NodeMobile.xcframework

          zip -r NodeMobile.xcframework.zip NodeMobile.xcframework

      - name: SHA256 Hash
        run: sha256sum NodeMobile.xcframework.zip

      - name: Upload xcframework
        uses: actions/upload-artifact@v3
        with:
          path: NodeMobile.xcframework.zip
